rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAdmin() {
      // Check if the authenticated user is the designated admin by email.
      return request.auth != null && request.auth.token.email == 'harshsingh9817@gmail.com';
    }

    function isOwner(userId) {
      // Check if the authenticated user's ID matches the document's user ID.
      return request.auth != null && request.auth.uid == userId;
    }

    // --- Collection Rules ---

    // Globals: Site-wide settings like hero text, payment settings.
    // Read-only for all users, writeable only by admin.
    match /globals/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // MenuItems: The list of all food items.
    // Read-only for all users, writeable only by admin.
    match /menuItems/{itemId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users: User profile information.
    match /users/{userId} {
      // A user can create their own profile document.
      allow create: if isOwner(userId);
      // A user can read and update their own profile. Admin can also read any user profile.
      allow get, update: if isOwner(userId) || isAdmin();
      // An admin can list all users for the messaging page.
      allow list: if isAdmin();
    }
    
    // Addresses: A sub-collection under each user.
    match /users/{userId}/addresses/{addressId} {
        // Only the owner of the user document can manage their addresses.
        allow read, write: if isOwner(userId);
    }
    
    // AdminMessages: Notifications sent from admin to users.
    match /adminMessages/{messageId} {
      // A user can only read messages sent to them.
      allow read: if isOwner(resource.data.userId);
      // Only an admin can create messages.
      allow create: if isAdmin();
      // Messages are immutable once sent.
      allow update, delete: if false; 
    }
    
    // Orders: Customer orders.
    match /orders/{orderId} {
      // A user can create an order for themselves.
      allow create: if isOwner(request.resource.data.userId);
      // A user can read their own orders. An admin can read any order.
      allow read: if isOwner(resource.data.userId) || isAdmin();
      // An admin can update any order. A user can only update their own order to cancel it.
      allow update: if (isOwner(resource.data.userId) && request.resource.data.status == 'Cancelled') || isAdmin();
      // Only an admin can delete orders.
      allow delete: if isAdmin();
    }
    
    // SupportTickets: Messages from users to support.
    match /supportTickets/{ticketId} {
        // Any authenticated user can create a support ticket.
        allow create: if request.auth != null; 
        // Only the admin can read, update, or delete support tickets.
        allow read, update, delete: if isAdmin();
    }
  }
}
