
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // This mirrors the hardcoded admin email in the application code.
      // For production, using custom claims is more secure and scalable.
      return request.auth != null && request.auth.token.email == 'harshsingh9817@gmail.com';
    }

    function isDelivery() {
      // Checks the isDelivery flag on the user's document.
      // This flag is set on login based on the /riders collection.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isDelivery == true;
    }

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated(); // During signup
      
      match /addresses/{addressId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }
    
    match /menuItems/{menuItemId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /globals/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /orders/{orderId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read: if isOwner(resource.data.userId) || isDelivery() || isAdmin();
      allow update: if isAdmin() || 
                     (isDelivery() && resource.data.deliveryRiderId == request.auth.uid) || 
                     (isOwner(resource.data.userId) && request.resource.data.status == 'Cancelled');
    }
    
    match /adminMessages/{messageId} {
      allow create: if isAdmin();
      allow read: if isOwner(resource.data.userId) || isAdmin();
    }
    
    match /riders/{riderId} {
      allow read, write: if isAdmin();
    }
    
    match /supportTickets/{ticketId} {
      allow create: if true; // Anyone can create a support ticket
      allow read, update: if isAdmin();
    }
    
    match /restaurantPartners/{partnerId} {
      allow read, write: if isAdmin();
    }
  }
}
