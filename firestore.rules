rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---

    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'harshsingh9817@gmail.com';
    }

    // --- Global Data (Read-Only for users) ---
    match /globals/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // --- Menu Items (Read-Only for users) ---
    match /menuItems/{itemId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // --- Coupons (Read-Only for users) ---
    match /coupons/{couponId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // --- User Data (Protected) ---
    match /users/{userId} {
      // Admins can read any user profile
      allow read: if isAdmin() || isOwner(userId);
      // Users can only create their own profile or update it. Admins can update any profile.
      allow create, update: if isOwner(userId) || isAdmin();
      
      // Addresses are sub-collections of a user
      match /addresses/{addressId} {
        allow read, create, update, delete: if isOwner(userId) || isAdmin();
      }
    }
    
    // --- Orders (Protected) ---
    match /orders/{orderId} {
        // Users can create and read their own orders. Admins can read any order.
        allow create: if isUserAuthenticated();
        allow read: if isOwner(resource.data.user_id) || isAdmin();
        // Users can update their own order only for specific fields like 'review' or 'cancellationReason'.
        // Admins can update any field.
        allow update: if (isOwner(resource.data.user_id) && (request.resource.data.keys().hasOnly(['review', 'cancellationReason', 'status']))) || isAdmin();
        // Only admins can delete orders.
        allow delete: if isAdmin();
    }

    // --- Admin Messages (User can only read their own) ---
    match /adminMessages/{messageId} {
        allow read: if isOwner(resource.data.userId) || isAdmin();
        allow write: if isAdmin();
    }

    // --- Support Tickets (Users create, Admins manage) ---
    match /supportTickets/{ticketId} {
        allow create: if isUserAuthenticated();
        allow read: if isOwner(resource.data.userId) || isAdmin();
        allow update: if isAdmin(); // Only admins can reply/resolve
    }
    
    // --- Default Deny ---
    // Deny access to any other collections not explicitly defined.
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
