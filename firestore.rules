
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Users:
    match /users/{userId} {
      // A user can get their own doc. Admins can get any.
      allow get: if request.auth.uid == userId || request.auth.token.admin == true;
      // A user can update their own doc.
      allow update: if request.auth.uid == userId;
      // Any authenticated user can create their user document on signup.
      allow create: if request.auth.uid != null;
      // Only admins can list all users.
      allow list: if request.auth.token.admin == true;
    }

    // Addresses can only be managed by the owner of the user document.
    match /users/{userId}/addresses/{addressId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Menu items can be read by any authenticated user, but only written by admins.
    match /menuItems/{menuItemId} {
        allow read: if request.auth.uid != null;
        allow write: if request.auth.token.admin == true;
    }

    // Global settings (like hero, payment) can be read by authenticated users, written by admins.
    match /globals/{docId} {
        allow read: if request.auth.uid != null;
        allow write: if request.auth.token.admin == true;
    }

    // Orders:
    match /orders/{orderId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      
      // GET: User can get their own order. Admin/Delivery can get any order.
      allow get: if request.auth.uid == resource.data.userId || request.auth.token.admin == true || request.auth.token.delivery == true;
      
      // LIST: Admin/Delivery can list all orders. Users can only list their own orders via a constrained query.
      allow list: if request.auth.token.admin == true || request.auth.token.delivery == true || (request.auth.uid != null && request.auth.uid == request.query.where.userId);
      
      allow update: if request.auth.token.admin == true || request.auth.token.delivery == true;
    }
    
    // Admin Messages:
    match /adminMessages/{messageId} {
      allow create: if request.auth.token.admin == true;

      // GET: Admin can get any. User can get their own.
      allow get: if request.auth.uid == resource.data.userId || request.auth.token.admin == true;
      
      // LIST: Admin can list all. Users can only list their own messages via a constrained query.
      allow list: if request.auth.token.admin == true || (request.auth.uid != null && request.auth.uid == request.query.where.userId);
    }
  }
}
