rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      // Admin is identified by a specific email address.
      return request.auth != null && request.auth.token.email == 'harshsingh9817@gmail.com';
    }

    // --- Globals Collection ---
    // Anyone can read global settings (hero, payment config), but only admin can write.
    match /globals/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // --- Menu Items Collection ---
    // Anyone can read the menu, only admin can change it.
    match /menuItems/{itemId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // --- Users Collection ---
    // Users can read/write their own data. Admin can read/list all user data.
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow list: if isAdmin(); // Admin needs to list users for messaging.
    }
    
    // User Sub-collection for Addresses
    match /users/{userId}/addresses/{addressId} {
      allow read, write: if isOwner(userId);
    }

    // --- Orders Collection ---
    // Admin can read/list/write all orders.
    // Users can create orders for themselves and read/update (cancel) their own orders.
    match /orders/{orderId} {
      allow read, update: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isOwner(request.resource.data.userId);
      allow list, delete: if isAdmin();
    }

    // --- Admin Messages Collection ---
    // Admin can write messages. Users can read messages meant for them.
    match /adminMessages/{messageId} {
      allow create: if isAdmin();
      allow read: if isOwner(resource.data.userId);
    }
    
    // --- Support Tickets Collection ---
    // Any authenticated user can create a ticket.
    // Admin can read/list/update all tickets.
    match /supportTickets/{ticketId} {
      allow create: if request.auth != null;
      allow read, update, list: if isAdmin();
    }

    // --- Default Deny ---
    // Deny access to any other collections not explicitly defined.
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
