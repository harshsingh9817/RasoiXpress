
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      return request.auth.token.email == 'harshsingh9817@gmail.com';
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isDelivery() {
      // Check for a custom claim set on the user's token.
      // This is more secure than checking the database.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isDelivery == true;
    }
    
    // Globals collection for sitewide settings like hero text
    match /globals/{docId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    match /menuItems/{menuItemId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }

    match /orders/{orderId} {
      // A user can read their own order, admins and delivery can read any.
      allow get: if isOwner(resource.data.userId) || isAdmin() || isDelivery();
      
      // Regular users can ONLY list orders filtered by their own userId.
      // Admins and Delivery partners can list all orders (their queries have no filters).
      allow list: if (
        request.query.filters.size() == 1 &&
        request.query.filters[0].field == 'userId' &&
        request.query.filters[0].value == request.auth.uid
      ) || isAdmin() || isDelivery();

      // Only authenticated users can create orders for themselves
      allow create: if request.auth != null && isOwner(request.resource.data.userId);

      // Only allow updating status by admin/delivery, or cancellation/review by owner.
      allow update: if (isAdmin() || isDelivery()) || 
                       (isOwner(resource.data.userId) && 
                         (request.resource.data.status == 'Cancelled' || 
                          request.resource.data.review != resource.data.review));
    }
    
    match /users/{userId} {
      allow read, create, update: if isOwner(userId);
      allow list: if isAdmin(); // Only admins can list users

      match /addresses/{addressId} {
        allow read, list: if isOwner(userId) || isAdmin();
        allow create, update, delete: if isOwner(userId) || isAdmin();
      }
    }
    
    match /riders/{riderId} {
      allow read, list: if true;
      allow create, delete: if isAdmin();
    }
    
    match /adminMessages/{messageId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isAdmin();
      allow list: if isOwner(request.query.filters[0].value) || isAdmin();
    }

    match /supportTickets/{ticketId} {
      allow create: if request.auth != null;
      allow read, list: if isAdmin();
      allow update: if isAdmin() && request.resource.data.status == 'Resolved';
    }
  }
}
