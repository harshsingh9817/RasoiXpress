
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'harshsingh9817@gmail.com';
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // --- Collection Rules ---

    // USERS: Users can create their own document and can only read/update their own.
    match /users/{userId} {
      allow read, update, delete: if isOwner(userId);
      allow create: if isAuthenticated();
      
      // ADDRESSES: Users can manage their own addresses.
      match /addresses/{addressId} {
        allow read, create, update, delete: if isOwner(userId);
      }
    }

    // MENU ITEMS: Any authenticated user can read the menu, but only admins can modify it.
    match /menuItems/{itemId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }
    
    // GLOBALS (Hero, Payment Settings): Authenticated users can read, only admins can write.
    match /globals/{docId} {
       allow read: if isAuthenticated();
       allow write: if isAdmin();
    }
    
    // ADMIN MESSAGES: Only accessible by admins and the specific recipient user.
    match /adminMessages/{messageId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isAdmin();
      allow update, delete: if false; // Messages are immutable
    }

    // SUPPORT TICKETS: Users can create tickets. Admins can read/update all tickets. Users can read their own.
    match /supportTickets/{ticketId} {
      allow create: if isAuthenticated();
      allow read: if isAdmin() || isOwner(resource.data.userId);
      allow update: if isAdmin();
      allow delete: if false;
    }
    
    // COUPONS: Only admins can manage coupons. Authenticated users can read them.
    match /coupons/{couponId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if isAdmin();
    }

    // ORDERS: This collection is no longer used by the application, but we lock it down just in case.
    // All order data is now handled by Supabase.
    match /orders/{orderId} {
      allow read, write: if false;
    }
  }
}
