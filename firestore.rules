rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'harshsingh9817@gmail.com';
    }

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // --- User Data ---
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated();

      // Addresses subcollection
      match /addresses/{addressId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }

    // --- Public Content ---
    match /menuItems/{menuItemId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    match /globals/{docId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // --- Orders ---
    match /orders/{orderId} {
      allow read: if (isOwner(resource.data.userId)) || isAdmin();
      allow create: if isOwner(request.resource.data.userId);
      // Allow admin to update, or a user to update ONLY to cancel the order.
      allow update: if isAdmin() || (isOwner(resource.data.userId) && request.resource.data.status == 'Cancelled');
      allow delete: if isAdmin();
    }

    // --- Admin & Support Messaging ---
    match /adminMessages/{messageId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow write: if isAdmin();
    }

    match /supportTickets/{ticketId} {
      // Admin can read all tickets and update them (reply/resolve)
      allow read, update: if isAdmin();
      // Any authenticated user can create a support ticket for themselves
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      allow delete: if isAdmin();
    }
  }
}
