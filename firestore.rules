rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Global Admin Rule: Admins can read/write anything. This rule is checked first.
    match /{path=**} {
      allow read, write: if request.auth.token.email == 'harshsingh9817@gmail.com';
    }

    // --- Specific Collection Rules ---

    // Users collection
    match /users/{userId} {
      // Allow user creation
      allow create: if request.auth.uid == userId;
      // Users can only read or update their own profile
      allow read, update: if request.auth.uid == userId;
    }

    // Orders collection
    match /orders/{orderId} {
      // Allow authenticated users to create their own orders
      allow create: if request.auth.uid == request.resource.data.userId;

      // --- READ RULES ---
      // 1. A user can read their own order
      allow read: if request.auth.uid == resource.data.userId;
      
      // 2. A rider can read an order if it's available for pickup
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isDelivery == true
                  && resource.data.isAvailableForPickup == true;
      
      // 3. A rider can read an order that is assigned to them
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isDelivery == true
                  && request.auth.uid == resource.data.deliveryRiderId;

      // --- UPDATE RULES ---
      // 1. A user can cancel their own order if it's still in 'Order Placed' state
      allow update: if request.auth.uid == resource.data.userId
                    && request.resource.data.status == 'Cancelled'
                    && resource.data.status == 'Order Placed';

      // 2. A rider can accept an available order
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isDelivery == true
                    && resource.data.deliveryRiderId == null
                    && request.resource.data.deliveryRiderId == request.auth.uid
                    && resource.data.isAvailableForPickup == true;

      // 3. A rider can mark their assigned order as 'Delivered'
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isDelivery == true
                    && request.auth.uid == resource.data.deliveryRiderId
                    && request.resource.data.status == 'Delivered';
    }

    // Globals collection (for hero data, etc.)
    match /globals/{docId} {
      allow read: if request.auth != null;
    }
    
    // Menu items can be read by anyone
    match /menuItems/{itemId} {
      allow read: if true;
    }
    
    // Support tickets
    match /supportTickets/{ticketId} {
      allow create: if true; // Anyone can create a support ticket
      allow read, write: if request.auth.uid == resource.data.userId; // User can access their own ticket
    }

    // Admin messages (read-only for users)
    match /adminMessages/{messageId} {
      allow read: if request.auth.uid == resource.data.userId;
    }

    // User addresses subcollection
    match /users/{userId}/addresses/{addressId} {
      allow read, write: if request.auth.uid == userId;
    }
  }
}
