
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions to check user roles from their document in the 'users' collection.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isAdmin() {
      return getUserData().isAdmin == true;
    }

    function isDelivery() {
      return getUserData().isDelivery == true;
    }

    // Rules for collections

    // `globals` collection (e.g., hero, paymentSettings)
    // - Anyone can read.
    // - Only admins can write.
    match /globals/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // `menuItems` collection
    // - Any authenticated user can read.
    // - Only admins can write.
    match /menuItems/{itemId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // `users` collection and its subcollections
    match /users/{userId} {
      // A user can read or update their own profile. Admins can manage any profile.
      allow read, update: if isOwner(userId) || isAdmin();
      
      // Users can manage their own cart, addresses, and view their own messages.
      match /cart/{itemId} {
        allow read, write, delete: if isOwner(userId) || isAdmin();
      }
      match /addresses/{addressId} {
        allow read, write, delete: if isOwner(userId) || isAdmin();
      }
      match /adminMessages/{messageId} {
        allow read: if isOwner(userId) || isAdmin();
      }
    }

    // `orders` collection
    match /orders/{orderId} {
      // A user can create their own order.
      allow create: if isOwner(request.resource.data.userId);

      // - A user can read their own order.
      // - A delivery rider can read an order if it's available for pickup OR if it's assigned to them.
      // - An admin can read any order.
      allow read: if isOwner(resource.data.userId) || isAdmin() ||
                  (isDelivery() && (resource.data.isAvailableForPickup == true || resource.data.deliveryRiderId == request.auth.uid));

      // - A user can update their own order only to cancel it.
      // - A delivery rider can update an order assigned to them.
      // - An admin can update any order.
      allow update: if (isOwner(resource.data.userId) && request.resource.data.status == 'Cancelled') ||
                    (isDelivery() && resource.data.deliveryRiderId == request.auth.uid) ||
                    isAdmin();

      // Only admins can delete orders.
      allow delete: if isAdmin();
    }
    
    // `supportTickets` collection
    // - Any authenticated user can create a ticket.
    // - Only admins can read or update tickets.
    match /supportTickets/{ticketId} {
        allow create: if request.auth != null;
        allow read, update: if isAdmin();
    }
    
    // `riders` collection (contains non-sensitive rider info)
    // - Only admins can manage this collection.
    match /riders/{riderId} {
        allow read, write, delete: if isAdmin();
    }
  }
}
