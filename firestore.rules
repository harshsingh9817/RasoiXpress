
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for the admin user
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'harshsingh9817@gmail.com';
    }

    // Users can read/update their own profile data
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }
    
    // Rules for user-specific subcollections like addresses
    match /users/{userId}/{subcollection}/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Orders can be read by the user who owns it or by an admin.
    // Users can only create orders for themselves.
    // Users can only update their own order (e.g., to cancel).
    match /orders/{orderId} {
      allow read: if (request.auth != null && resource.data.userId == request.auth.uid) || isAdmin();
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if (request.auth != null && resource.data.userId == request.auth.uid) || isAdmin();
      allow delete: if isAdmin();
    }

    // Menu items, categories, and globals are read-only for authenticated users, but writable for admins.
    match /menuItems/{itemId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    match /categories/{categoryId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }

    match /globals/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Support tickets can be created by any authenticated user.
    // Admins can read and write all tickets.
    match /supportTickets/{ticketId} {
        allow create: if request.auth != null;
        allow read, write: if isAdmin();
    }
    
    // Admin messages can be read by the intended user or an admin.
    // Only admins can create messages.
    match /adminMessages/{messageId} {
        allow read: if (request.auth != null && resource.data.userId == request.auth.uid) || isAdmin();
        allow write: if isAdmin();
    }

    // Coupons are read-only for users, writable for admins.
    match /coupons/{couponId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
  }
}
