
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }
    function isDelivery() {
      return request.auth != null && request.auth.token.delivery == true;
    }
    function isAuthenticated() {
      return request.auth != null;
    }

    // User profiles and their subcollections
    match /users/{userId} {
      allow get, update: if isOwner(userId);
      allow create: if request.auth.uid == userId;
      allow list: if isAdmin(); // Admins can list users for messaging

      match /addresses/{addressId} {
        allow read, write, delete: if isOwner(userId);
      }
    }

    // Menu items and global settings can be read by anyone, written by admins
    match /menuItems/{menuItemId} {
      allow get, list: if isAuthenticated();
      allow write: if isAdmin();
    }
    match /globals/{docId} {
      allow get: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Orders
    match /orders/{orderId} {
      allow create: if isAuthenticated();
      // An order can be read by its owner, an admin, or a delivery person
      allow get: if isOwner(resource.data.userId) || isAdmin() || isDelivery();
      // Orders can be listed by admin/delivery, or by a user for their own orders
      allow list: if (isAdmin() || isDelivery()) || (isAuthenticated() && request.query.where.userId == request.auth.uid);
      // Orders can be updated by owner (for review/cancel), or admin/delivery (for status)
      allow update: if isOwner(resource.data.userId) || isAdmin() || isDelivery();
    }
    
    // Riders can only be managed by admins
    match /riders/{riderId} {
        allow read, list, create, delete: if isAdmin();
    }
    
    // Support tickets can be created by any user, but managed only by admins
    match /supportTickets/{ticketId} {
      allow create: if isAuthenticated();
      allow read, list, update, delete: if isAdmin();
    }
  }
}
