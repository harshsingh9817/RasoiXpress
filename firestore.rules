
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuth() && request.auth.token.email == 'harshsingh9817@gmail.com';
    }

    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function isDelivery() {
      // This get() call is why the rules need to be structured carefully.
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isDelivery == true;
    }

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    match /globals/{docId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }

    match /menuItems/{menuItemId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }
    
    match /riders/{riderId} {
      allow read, write: if isAdmin();
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId);
      match /addresses/{addressId} {
        allow read, write: if isOwner(userId);
      }
    }

    match /adminMessages/{messageId} {
      allow read: if isAuth() && resource.data.userId == request.auth.uid;
      allow write: if isAdmin();
    }
    
    match /supportTickets/{ticketId} {
      allow create: if isAuth();
      allow read, update, delete: if isAdmin();
    }
    
    match /orders/{orderId} {
      allow create: if isAuth() && request.resource.data.userId == request.auth.uid;
      allow delete: if isAdmin();

      // READ: 
      // - Admins can read any order.
      // - Owners can read their own order.
      // - Delivery riders can read orders assigned to them.
      // - Delivery riders can read orders available for pickup.
      allow read: if isAdmin() || isOwner(resource.data.userId) || (isDelivery() && (resource.data.deliveryRiderId == request.auth.uid || resource.data.isAvailableForPickup == true));
      
      // UPDATE:
      // - An owner can cancel their own order if it was just placed.
      // - An admin can update any order.
      // - A rider can accept an available order or update an order assigned to them.
      allow update: if (isOwner(resource.data.userId) && resource.data.status == 'Order Placed' && request.resource.data.status == 'Cancelled')
                    || isAdmin()
                    || (isDelivery() && (request.resource.data.deliveryRiderId == request.auth.uid));
    }
  }
}
