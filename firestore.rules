
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAdmin() {
      return request.auth.token.email == 'harshsingh9817@gmail.com';
    }
    
    function isDelivery() {
      // It's safer to check for the existence of the user document and the field.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isDelivery == true;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // --- Collection Rules ---

    match /users/{userId} {
      // A user can read and write their own user document.
      allow read, write: if isOwner(userId) || isAdmin();

      // Rules for the 'addresses' subcollection.
      match /addresses/{addressId} {
        // A user can fully manage their own addresses. Admins can also manage them.
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }
    
    match /menuItems/{itemId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /orders/{orderId} {
        // Allow get if owner, delivery partner, or admin.
        allow get: if isOwner(get(/databases/$(database)/documents/orders/$(orderId)).data.userId) || isDelivery() || isAdmin();
        
        // Users can list their own orders. Admins/delivery can list all.
        allow list: if (request.query.where[0][0] == 'userId' && request.query.where[0][2] == request.auth.uid) || isAdmin() || isDelivery();
        
        // Users can create their own orders.
        allow create: if isOwner(request.resource.data.userId) || isAdmin();

        // Users can update their own order to 'Cancelled' or add a review. Admins/delivery can update any status.
        allow update: if (isOwner(resource.data.userId) && (request.resource.data.status == 'Cancelled' || request.resource.data.review != resource.data.review)) || isAdmin() || isDelivery();

        // Only admins can delete orders.
        allow delete: if isAdmin();
    }
    
    match /globals/{docId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    match /riders/{riderId} {
        allow read: if isAdmin();
        allow create, update, delete: if isAdmin();
    }
    
    match /supportTickets/{ticketId} {
        allow read, update: if isAdmin();
        allow create: if true;
    }

    match /adminMessages/{messageId} {
        // User can read their own messages. Admin can write all messages.
        allow read: if isOwner(get(/databases/$(database)/documents/adminMessages/$(messageId)).data.userId) || isAdmin();
        allow write: if isAdmin();
    }
  }
}
